@startuml
!theme plain
title "Fluxo de Sequência: Criação de Cliente | Falha na Validação (Circuit Breaker Aberto)"

actor "Usuário" as User
participant "CustomerController\n<<Adapter (In)>>" as Controller
participant "CreateCustomerUseCase\n<<Application>>" as UseCase
participant "CustomerRepositoryPort\n<<Domain Port (Out)>>" as CustomerRepoPort
participant "ReceitaFederalAdapter\n<<Adapter (Out)>>" as ReceitaAdapter
participant "CustomerRepositoryAdapter\n<<Adapter (Out)>>" as CustomerRepoAdapter
database "MongoDB" as DB

skinparam sequence {
    ParticipantBorderColor #555555
    ParticipantBackgroundColor #FAFAFA
    ActorBorderColor #555555
    ArrowColor #333333
}

autonumber "<b>[00]"

User -> Controller: POST /api/v1/customers\n(CreateCustomerRequest)
activate Controller

Controller -> UseCase: createCustomer(dto)
activate UseCase

UseCase -> CustomerRepoPort: existsByCpf(cpf)
activate CustomerRepoPort
CustomerRepoPort -> CustomerRepoAdapter: existsByCpf(cpf)
activate CustomerRepoAdapter
CustomerRepoAdapter -> DB: count({cpf: "..."})
DB --> CustomerRepoAdapter: 0
CustomerRepoAdapter --> CustomerRepoPort: false
deactivate CustomerRepoAdapter
CustomerRepoPort --> UseCase
deactivate CustomerRepoPort

note right of UseCase: CPF é único

UseCase -> ReceitaAdapter: validateCpf(cpf)
activate ReceitaAdapter

group Circuit Breaker [ESTADO = ABERTO]
    
    ReceitaAdapter -> ReceitaAdapter: cpfValidationFallback(cpf, throwable)
    activate ReceitaAdapter
    
    note right of ReceitaAdapter      
      Subsegmento no X-Ray
    end note
    
    ReceitaAdapter --> ReceitaAdapter: CpfStatus.PENDENTE_VALIDACAO_RECEITA
    deactivate ReceitaAdapter
end

ReceitaAdapter --> UseCase: CpfStatus.PENDENTE_VALIDACAO_RECEITA
deactivate ReceitaAdapter

note right of UseCase
  Recebe status 'PENDENTE' do fallback
  O cliente será criado, mas marcado
  para validação posterior
end note

UseCase -> CustomerRepoPort: save(customer)
activate CustomerRepoPort
CustomerRepoPort -> CustomerRepoAdapter: save(customer)
activate CustomerRepoAdapter
CustomerRepoAdapter -> DB: insert(customerDocument com status PENDENTE)
DB --> CustomerRepoAdapter: (documento salvo)
CustomerRepoAdapter --> CustomerRepoPort: Customer (com status PENDENTE)
deactivate CustomerRepoAdapter
CustomerRepoPort --> UseCase: Customer (com status PENDENTE)
deactivate CustomerRepoPort
note right of UseCase
  Incrementa métricas
  via MeterRegistry
end note

UseCase --> Controller: Customer (com status PENDENTE)
deactivate UseCase

Controller --> User: HTTP 201 Created\n(CustomerResponse com cpfStatus:\n PENDENTE_VALIDACAO_RECEITA)
deactivate Controller
@enduml