@startuml
!theme plain
title "Fluxo de Sequência: Criação de Cliente | Feature de validação de CPF via JatoCPF"

actor "Usuário" as User
participant "CustomerController\n<<Adapter (In)>>" as Controller
participant "CreateCustomerUseCase\n<<Application>>" as UseCase
participant "CustomerRepositoryPort\n<<Domain Port (Out)>>" as CustomerRepoPort
participant "JatoCpfServicesAdapter\n<<Adapter (Out)>>" as JatoAdapter
participant "CustomerRepositoryAdapter\n<<Adapter (Out)>>" as CustomerRepoAdapter
database "MongoDB" as DB

skinparam sequence {
    ParticipantBorderColor #555555
    ParticipantBackgroundColor #FAFAFA
    ActorBorderColor #555555
    ArrowColor #333333
}

autonumber "<b>[00]"

User -> Controller: POST /api/v1/customers\n(CreateCustomerRequest)
activate Controller

Controller -> UseCase: createCustomer(dto)
activate UseCase

UseCase -> CustomerRepoPort: existsByCpf(cpf)
activate CustomerRepoPort
CustomerRepoPort -> CustomerRepoAdapter: existsByCpf(cpf)
activate CustomerRepoAdapter
CustomerRepoAdapter -> DB: count({cpf: "..."})
DB --> CustomerRepoAdapter: 0
CustomerRepoAdapter --> CustomerRepoPort: false
deactivate CustomerRepoAdapter
CustomerRepoPort --> UseCase
deactivate CustomerRepoPort

note right of UseCase: CPF é único.

UseCase -> JatoAdapter: validateCpf(cpf)
activate JatoAdapter

note right of UseCase
  O UseCase usa 'CpfValidationStrategy'
  Feature Toggle está configurado para "jatoCpf"
  O Spring injeta a implementação 'JatoCpfServicesAdapter'
end note

note right of JatoAdapter
  Provedor alternativo
  de validação de CPF
end note

JatoAdapter --> UseCase: CpfStatus.CPF_ATIVO
deactivate JatoAdapter

note right of UseCase: Validação local OK

UseCase -> CustomerRepoPort: save(newCustomer)
activate CustomerRepoPort
CustomerRepoPort -> CustomerRepoAdapter: save(newCustomer)
activate CustomerRepoAdapter
CustomerRepoAdapter -> DB: insert(customerDocument)
DB --> CustomerRepoAdapter: (documento salvo)
CustomerRepoAdapter --> CustomerRepoPort: Customer (com ID e timestamps de auditoria)
deactivate CustomerRepoAdapter
CustomerRepoPort --> UseCase: Customer (persistido)
deactivate CustomerRepoPort
note right of UseCase
  Incrementa métricas
  via MeterRegistry
end note

UseCase -> Controller: Customer (persistido)
deactivate UseCase

Controller -> User: HTTP 201 Created\n(CustomerResponse com HATEOAS)
deactivate Controller
@enduml